<page-model-menu>
  <!-- EXPORT -->
  <div class="btn-group dropdown mr-2" if={ getExports().length }>
    <button class="btn btn-primary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
      <i class="fa fa-download mr-2" />
      Export
    </button>

    <div class="dropdown-menu">
      <button class="dropdown-item" each={ (e, i) in getExports() }>
        { getExport(e).title }
      </button>
    </div>
  </div>
  <!-- / EXPORT -->

  <!-- PER PAGE -->
  <div class="dropdown d-inline-block mr-2" if={ !props.page.get('data.group.uuid') }>
    <button class="btn btn-light dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
      Per Page:
      <b class="ml-1">{ props.page.get('data.limit') || 20 }</b>
    </button>
    <div class="dropdown-menu dropdown-menu-right">
      <button each={ (limit, i) in limits } class={ `dropdown-item${limit === (props.page.get('data.limit') || 20) ? ' active' : ''}` } onclick={ (e) => onLimit(e, limit) }>
        { limit }
      </button>
    </div>
  </div>
  <!-- / PER PAGE -->

  <!-- CREATE -->
  <button if={ props.dashup.can(props.page, 'submit') && !props.page.get('data.forms.1') } class="btn btn-dark mr-2" type="button" onclick={ (e) => props.onItem(e) }>
    <i class="fat fa-plus mr-2" />
    { props.page.get('name') }
  </button>
  <div if={ props.dashup.can(props.page, 'submit') && props.page.get('data.forms.1') } class="btn-group dropdown mr-2">
    <button class="btn btn-dark dropdown-toggle" type="button" id="dropdown-add" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
      <i class="fat fa-plus mr-2" />
      { props.page.get('name') }
    </button>

    <div class="dropdown-menu" aria-labelledby="dropdown-add">
      <button each={ (form, i) in getForms() } class="dropdown-item" onclick={ (e) => props.onItem(e, null, form) }>
        { props.dashup.page(form).get('name') }
      </button>
    </div>
  </div>
  <!-- / CREATE -->

  <script>
  
    // export default
    export default class PageModelMenu {
      
      /**
       * on before mount
       */
      onBeforeMount() {
        // get fields
        this.limits = [20, 40, 60, 80, 100];

        // get export
        this.getExport = this.getExport.bind(this);
        this.getExports = this.getExports.bind(this);
      }
      
      /**
       * on limit
       *
       * @param  {Event} e
       *
       * @return {*}
       */
      onLimit(e, limit) {
        // prevent scrolling to top
        e.preventDefault();
        e.stopPropagation();
        
        // set model
        this.props.data('limit', limit);
      }

      /**
       * get export
       */
      getExport(e) {
        // return
        return this.props.connects.find((c) => c.type === e.type);
      }

      /**
       * get forms
       */
      getForms() {
        // only forms that exist
        return (props.page.get('data.forms') || []).filter((f) => this.props.dashup.page(f));
      }

      /**
       * get exports
       */
      getExports() {
        // export
        return [...(this.props.page.get('connects') || [])].map((e) => this.getExport(e)).filter((c) => c && (c.data || {}).export);
      }
    }
  </script>
</page-model-menu>