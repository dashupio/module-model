<field-model-view>
  <div class="tags">
    <a each={ (model, i) in getValues(props) } href={ `/app/${model.form}/${model.id}` } class="btn btn-sm btn-info mr-2">
      { model.name }
    </a>
  </div>

  <script>
		// export default
    export default {
      components : {
      },

      getValues(props) {
        // check value
        let value = props.value || [];

        // check array
        if (!Array.isArray(value)) value = [value];
        
        // by
        let model = this.props.field.model;

        // model
        model = model && model.id ? model.id : model;

        // get form
        const forms = Array.from(props.dashup.get('pages').values()).filter((p) => {
          // return model check
          return p.get('type') === 'form' && p.get('data.model') === model;
        });

        // check form
        if (!forms || !forms.length) return [];

        // get field
        const fields = forms.reduce((accum, form) => {
          // amend
          accum.push(...(form.get('data.fields') || []));

          // accumulator
          return accum;
        }, []);

        // get field
        const field = fields.find(f => f.uuid === props.field.by);

        // check form
        if (!field) return [];

        // return joined
        return value.map((item) => {
          // check item
          if (item && item.get) return {
            id   : item.get('_id'),
            form : item.get('_meta.form'),
            name : item.get(field.name || field.uuid || 'null') || 'N/A',
          };

          // return nothing
          return null;
        }).filter((v) => v);
      },
    }
  </script>
</field-model-view>