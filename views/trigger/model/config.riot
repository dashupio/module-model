<trigger-model-config>
  <span>
    <eden-select class="d-inline-block w-auto mx-1" ref="model" on-change={ (e, val) => onModel(val) } placeholder="Select Model" data={ getModel() } />
    <span>
      Has been
    </span>
    <eden-select class="d-inline-block w-auto mx-1" ref="event" on-change={ (e, val) => onEvent(val) } multiple={ true } placeholder="Select Event(s)" data={ getEvent() } />
  </span>

  <script>
    /**
     * export default
     */
    export default class TriggerModelConfig {
      /**
       * on before mount
       */
      onBeforeMount(...args) {
        // bind methods
        this.onModel = this.onModel.bind(this);
        this.onEvent = this.onEvent.bind(this);

        // bind
        this.getEvent = this.getEvent.bind(this);
        this.getModel = this.getModel.bind(this);
      }

      /**
       * on model
       */
      onModel(val) {
        // check ref
        if (!val) val = $('select', this.$('[ref="model"]')).val();
        
        // set model
        this.props.set('model', val);
      }

      /**
       * on change when
       *
       * @param {Event} e
       */
      onEvent(val) {
        // get value
        if (!val) val = $('select', this.$('[ref="event"]')).val();

        // set when
        this.props.set('event', val);
      }

      /**
       * get when
       */
      getEvent() {
        // return when
        return ['Created', 'Updated', 'Removed'].map((type) => {
          // return type
          return {
            name     : type,
            value    : type.toLowerCase(),
            selected : (this.props.page.get('data.trigger.event') || []).includes(type.toLowerCase()),
          };
        });
      }

      /**
       * get model
       */
      getModel() {
        // push
        return Array.from(this.props.dashup.get('pages').values()).filter((p) => p.get('type') === 'model').map((page) => {
          // return object
          return {
            name     : page.get('name'),
            value    : page.get('_id'),
            selected : page.get('_id') === this.props.page.get('data.trigger.model'),
          }
        });
      }
    }
  </script>
</trigger-model-config>